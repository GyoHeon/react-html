{"version":3,"file":"makeRoot.js","sourceRoot":"","sources":["makeRoot.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAe,UAAU,EAAE,MAAM,OAAO,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAQ9C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,EAAE,EAAE,SAAS,EAAW,EAAE,EAAE;IACnE,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,KAAK,CAAC,aAAa,KAAK,KAAK,SAAS,YAAY,CAAC,CAAC;KAC/D;IACD,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,kBAAkB,KAAK,KAAK,IAAI,YAAY,CAAC,CAAC;KAC/D;IAED,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,MAAM,GAAG,CAAC,QAAiB,EAAE,EAAE;QACnC,MAAM,eAAe,GAAG;YACtB,GAAG,KAAK;YACR,GAAG,QAAQ;SACZ,CAAC;QACF,WAAW,CAAC,MAAM,CAChB,KAAC,UAAU,cACT,KAAC,SAAS,OAAK,eAAe,GAAI,GACvB,CACd,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM,CAAC,KAAK,CAAC,CAAC;IAEd,4EAA4E;IAC5E,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { ElementType, StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\ninterface IRender {\n  root: Element;\n  props?: object;\n  Component: ElementType;\n}\n\nexport const makeRoot = ({ root, props = {}, Component }: IRender) => {\n  if (!root) {\n    throw new Error(`Root with ${props}, ${Component} not found`);\n  }\n  if (!Component) {\n    throw new Error(`Component with ${props}, ${root} not found`);\n  }\n\n  const rootElement = createRoot(root);\n\n  const render = (newProps?: object) => {\n    const integratedProps = {\n      ...props,\n      ...newProps,\n    };\n    rootElement.render(\n      <StrictMode>\n        <Component {...integratedProps} />\n      </StrictMode>\n    );\n  };\n\n  render(props);\n\n  // rerendering 용 render 함수를 리턴합니다. props의 경우 기존 props와 새로운 props를 합쳐서 전달합니다.\n  return render;\n};\n"]}