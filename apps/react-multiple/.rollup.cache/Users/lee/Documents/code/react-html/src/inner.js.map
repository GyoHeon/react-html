{"version":3,"file":"inner.js","sourceRoot":"","sources":["inner.tsx"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,0BAA0B,CAAC;AACnD,OAAO,YAAY,MAAM,2BAA2B,CAAC;AACrD,OAAO,MAAM,MAAM,qBAAqB,CAAC;AACzC,OAAO,aAAa,CAAC;AACrB,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAmB,CAAC;AAEnE,IAAI,KAAK,GAAG,CAAC,CAAC;AAEd,MAAM,YAAY,GAAG,QAAQ,CAAC;IAC5B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,EAAE;IACT,SAAS,EAAE,MAAM;CAClB,CAAC,CAAC;AAEH,UAAU,CAAC,GAAG,EAAE;IACd,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAmB,CAAC;IAC9E,QAAQ,CAAC;QACP,IAAI,EAAE,WAAW;QACjB,KAAK,EAAE;YACL,KAAK;SACN;QACD,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAmB,CAAC;IAC9E,QAAQ,CAAC;QACP,IAAI,EAAE,WAAW;QACjB,KAAK,EAAE;YACL,OAAO,EAAE,GAAG,EAAE;gBACZ,KAAK,EAAE,CAAC;gBACR,2BAA2B;gBAC3B,YAAY,CAAC,EAAE,CAAC,CAAC;YACnB,CAAC;SACF;QACD,SAAS,EAAE,WAAW;KACvB,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACrC,CAAC,EAAE,CAAC,CAAC,CAAC;AAEN;;;;;;;;;GASG","sourcesContent":["import CountButton from \"./components/CountButton\";\nimport CountDisplay from \"./components/CountDisplay\";\nimport Parent from \"./components/Parent\";\nimport \"./index.css\";\nimport { makeRoot } from \"./util/makeRoot\";\n\nconst parent = document.getElementById(\"parent\") as HTMLDivElement;\n\nlet count = 0;\n\nconst parentRender = makeRoot({\n  root: parent,\n  props: {},\n  Component: Parent,\n});\n\nsetTimeout(() => {\n  const countNumber = document.getElementById(\"count-number\") as HTMLDivElement;\n  makeRoot({\n    root: countNumber,\n    props: {\n      count,\n    },\n    Component: CountDisplay,\n  });\n\n  const countButton = document.getElementById(\"count-button\") as HTMLDivElement;\n  makeRoot({\n    root: countButton,\n    props: {\n      onClick: () => {\n        count++;\n        // numberRender({ count });\n        parentRender({});\n      },\n    },\n    Component: CountButton,\n  });\n\n  console.log(countButton.innerHTML);\n}, 0);\n\n/**\n * react는 렌더링을 비동기적으로 실행합니다.\n * 이 때 micro task queue를 이용하므로 후순위인 task queue를 사용하는 setTimeout을 이용하면\n * react root 안에 nested react root를 만들수는 있습니다.\n *\n * 하지만!\n *\n * react root안에서 따로 만든 react root는 외부 root가 리렌더링 되어도 내부는 리렌더링되지 않습니다.\n * 이것은 기본적인 리액트의 동작과 전혀 다르므로, 엄청난 휴먼 에러를 일으킬 것으로 예상됩니다.\n */\n"]}